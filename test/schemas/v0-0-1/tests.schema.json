{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/unicode-org/message-format-wg/main/test/schemas/v0-0-1/tests.schema.json",
  "title": "MessageFormat 2 data-driven tests",
  "description": "This is the main schema for MessageFormat 2 test source data.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "tests"
  ],
  "properties": {
    "scenario": {
      "type": "string",
      "description": "Identifier for the tests in the file"
    },
    "description": {
      "type": "string",
      "description": "Information about the test scenario."
    },
    "defaultTestProperties": {
      "$ref": "#/$defs/defaultTestProperties"
    },
    "tests": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/test"
      },
      "minItems": 1
    }
  },
  "$comment": "This allOf specifies required test properties that allow a default. A value will be required in 'defaultTestProperties' if one is not provided for every individual test.",
  "allOf": [
    {
      "anyOf": [
        {
          "properties": {
            "defaultTestProperties": {
              "required": [
                "testType"
              ]
            }
          }
        },
        {
          "properties": {
            "tests": {
              "type": "array",
              "items": {
                "required": [
                  "testType"
                ]
              }
            }
          }
        }
      ]
    },
    {
      "anyOf": [
        {
          "properties": {
            "defaultTestProperties": {
              "required": [
                "locale"
              ]
            }
          }
        },
        {
          "properties": {
            "tests": {
              "type": "array",
              "items": {
                "required": [
                  "locale"
                ]
              }
            }
          }
        }
      ]
    },
    {
      "anyOf": [
        {
          "properties": {
            "defaultTestProperties": {
              "required": [
                "src"
              ]
            }
          }
        },
        {
          "properties": {
            "tests": {
              "type": "array",
              "items": {
                "required": [
                  "src"
                ]
              }
            }
          }
        }
      ]
    },
    {
      "$comment": "Only one assertion is required. It doesn't matter which type.",
      "anyOf": [
        {
          "properties": {
            "defaultTestProperties": {
              "$ref": "#/$defs/anyExp"
            }
          }
        },
        {
          "properties": {
            "tests": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/anyExp"
              }
            }
          }
        }
      ]
    }
  ],
  "$defs": {
    "defaultTestProperties": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "testType": {
          "$ref": "#/$defs/testType"
        },
        "locale": {
          "$ref": "#/$defs/locale"
        },
        "src": {
          "$ref": "#/$defs/src"
        },
        "params": {
          "$ref": "#/$defs/params"
        },
        "exp": {
          "$ref": "#/$defs/exp"
        },
        "expCleanSrc": {
          "$ref": "#/$defs/expCleanSrc"
        },
        "expParts": {
          "$ref": "#/$defs/expParts"
        },
        "expErrors": {
          "$ref": "#/$defs/expErrors"
        }
      }
    },
    "test": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string",
          "description": "Information about the test."
        },
        "testType": {
          "$ref": "#/$defs/testType"
        },
        "locale": {
          "$ref": "#/$defs/locale"
        },
        "src": {
          "$ref": "#/$defs/src"
        },
        "params": {
          "$ref": "#/$defs/params"
        },
        "exp": {
          "$ref": "#/$defs/exp"
        },
        "expCleanSrc": {
          "$ref": "#/$defs/expCleanSrc"
        },
        "expParts": {
          "$ref": "#/$defs/expParts"
        },
        "expErrors": {
          "$ref": "#/$defs/expErrors"
        },
        "only": {
          "type": "boolean",
          "description": "Normally not set. A flag to use during development to only run one or more specific tests."
        }
      }
    },
    "testType": {
      "description": "The category of test.",
      "enum": [
        "syntax",
        "function"
      ]
    },
    "locale": {
      "description": "The locale to use for formatting.",
      "type": "string"
    },
    "src": {
      "description": "The MF2 syntax source.",
      "$comment": "Array values should be concatenated into a single string. They are only included to help readability in the test JSON.",
      "type": [
        "string",
        "array"
      ],
      "items": {
        "type": "string"
      }
    },
    "params": {
      "description": "Parameters to pass in to the formatter for resolving external variables.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/var"
      }
    },
    "var": {
      "type": "object",
      "oneOf": [
        {
          "additionalProperties": false,
          "required": [
            "value"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {}
          }
        },
        {
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "const": "datetime"
            },
            "value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "exp": {
      "description": "The expected result of formatting the message to a string.",
      "type": "string"
    },
    "expCleanSrc": {
      "description": "The expected normalized form of `src`, for testing stringifiers.",
      "$comment": "Array values should be concatenated into a single string. They are only included to help readability in the test JSON.",
      "type": [
        "string",
        "array"
      ],
      "items": {
        "type": "string"
      }
    },
    "expParts": {
      "$ref": "formatted-parts.schema.json"
    },
    "expErrors": {
      "description": "The runtime errors expected to be emitted when formatting the message. If expErrors is either absent or empty, the message must be formatted without errors.",
      "type": [
        "array",
        "boolean"
      ],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "enum": [
              "bad-input",
              "bad-option",
              "missing-func",
              "not-selectable",
              "range-error",
              "unresolved-var",
              "unsupported-annotation",
              "unsupported-statement"
            ]
          }
        }
      }
    },
    "anyExp": {
      "anyOf": [
        {
          "required": [
            "exp"
          ]
        },
        {
          "required": [
            "expCleanSrc"
          ]
        },
        {
          "required": [
            "expParts"
          ]
        },
        {
          "required": [
            "expErrors"
          ]
        }
      ]
    }
  }
}
